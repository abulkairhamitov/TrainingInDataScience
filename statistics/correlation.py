# Нужно понимать, что корреляция устанавливает определенный тип зависимости: зная о соотношении
# переменной со средним, можно получить информацию о таком же соотношении второй переменной. Поэтому для
# очевидно зависимых переменных корреляция может выдывать нулевую корреляцию. 

from singleDatasetDescription import standard_deviation

# вектор отклонений от среднего
def de_mean(x):
    x_bar = sum(x) / len(x)
    return [x_i - x_bar for x_i in x]

# Скалярное произведение
def dot(v, w):
    return sum(v_i * w_i for v_i, w_i in zip(v, w))

# Ковариация - совместное отклонение двух переменных от своих средних (дисперсия для двух выборок)
def covariance(x, y):
    n = len(x)
    return dot(de_mean(x), de_mean(y)) / (n - 1)
# В случае, если элементы векторов x и y оба одновременно выше или ниже своих средних, в сумму входит положительное число
# Это значит, что если ковариация достаточно не близка к нулю, то можно говорить о взаимосвязи x и y, что бы это не значило

# Корреляция лучший аналог ковариации в том смысле, что она безразмерна и лежит на отрезке от -1 до 1
def correlation(x, y):
    stdev_x = standard_deviation(x)
    stdev_y = standard_deviation(y)
    if stdev_x > 0 and stdev_y > 0:
        return covariance(x, y) / stdev_y / stdev_x
    else :
        return 0

